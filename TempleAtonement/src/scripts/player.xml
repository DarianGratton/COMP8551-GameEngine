<root>
    <update>

        <!-- If attacking, add to a timer and not allow new input -->
        <ifVar name="isAttacking" value="true" type="bool">
            <addVar name="attackTimer" value="deltaTime" type="double"/>
            <ifVarGreater name="attackTimer" value="0.15" type="double">
                <updateVar name="attackTimer" value="0.0" type="double"/>
                <updateVar name="isAttacking" value="false" type="bool" />
                <onEntity name="weaponEntity">
                    <setActive value="false"/>
                </onEntity>
            </ifVarGreater>
        </ifVar>

        <!-- attack -->
        <ifVar name="isAttacking" value="false" type="bool">
            <keyPress value="KEY_SPACE">
                <updateVar name="isAttacking" value="true" type="bool"/>
                <onEntity name="weaponEntity">
                    <setActive value="true"/>
                </onEntity>
                <!-- Check player direction to move weaponEntity -->
                <matchEntityPos name="weaponEntity"/>
                <ifVar name="playerDirection" value="0" type="int">
                    <!-- Up -->
                    <onEntity name="weaponEntity">
                        <moveEntity x="0.0" y="24.0" z="0.0" applyDt="false"/>
                        <changeSprite name="../TempleAtonement/texture/blobsprite_10.png"/>
                    </onEntity>
                </ifVar>
                <ifVar name="playerDirection" value="1" type="int">
                    <!-- Right -->
                    <onEntity name="weaponEntity">
                        <moveEntity x="24.0" y="0.0" z="0.0" applyDt="false"/>
                        <changeSprite name="../TempleAtonement/texture/blobsprite_07.png"/>
                    </onEntity>
                </ifVar>
                <ifVar name="playerDirection" value="2" type="int">
                    <!-- Down -->
                    <onEntity name="weaponEntity">
                        <moveEntity x="0.0" y="-24.0" z="0.0" applyDt="false"/>
                        <changeSprite name="../TempleAtonement/texture/blobsprite_01.png"/>
                    </onEntity>
                </ifVar>
                <ifVar name="playerDirection" value="3" type="int">
                    <!-- Left -->
                    <onEntity name="weaponEntity">
                        <moveEntity x="-24.0" y="0.0" z="0.0" applyDt="false"/>
                        <changeSprite name="../TempleAtonement/texture/blobsprite_04.png"/>
                    </onEntity>
                </ifVar>
            </keyPress>
        </ifVar>

        <!-- movement -->
        <ifVar name="isAttacking" value="false" type="bool">
            <keyPress value="KEY_W">
                <changeSprite name="../TempleAtonement/texture/blobsprite_10.png"/>
                <moveEntity x="0.0" y="12.0" z="0.0" applyDt="true"/>
                <updateVar name="playerDirection" value="0" type="int"/>
            </keyPress>
            <keyPress value="KEY_S">
                <changeSprite name="../TempleAtonement/texture/blobsprite_01.png"/>
                <moveEntity x="0.0" y="-12.0" z="0.0" applyDt="true"/>
                <updateVar name="playerDirection" value="2" type="int"/>
            </keyPress>
            <keyPress value="KEY_A">
                <changeSprite name="../TempleAtonement/texture/blobsprite_04.png"/>
                <moveEntity x="-12.0" y="0.0" z="0.0" applyDt="true"/>
                <updateVar name="playerDirection" value="3" type="int"/>
            </keyPress>
            <keyPress value="KEY_D">
                <changeSprite name="../TempleAtonement/texture/blobsprite_07.png"/>
                <moveEntity x="12.0" y="0.0" z="0.0" applyDt="true"/>
                <updateVar name="playerDirection" value="1" type="int"/>
            </keyPress>
        </ifVar>

        <!-- interact -->
        <keyPress value="KEY_E">
            <onEntity name="interactEntity">
                <callFuntion name="interacted"/>
            </onEntity>
        </keyPress>
        
        <!-- If invincible, increment timer and maybe stop being invincible -->
        <ifVar name="isInvincible" type="bool" value="true">
            <addVar name="invinTimer" value="deltaTime" type="double"/>
            <ifVarGreater name="invinTimer" value="3.0" type="double">
                <updateVar name="invinTimer" value="0.0" type="double"/>
                <updateVar name="isInvincible" value="false" type="bool" />
                <updateVar name="blink" value="true" type="bool" />
            </ifVarGreater>
            <flipBool name="blink"/>
            <ifVar name="blink" type="bool" value="false">
                <ifVar name="playerDirection" value="0" type="int">
                    <!-- Up -->
                    <changeSprite name="../TempleAtonement/texture/blobsprite_10.png"/>
                </ifVar>
                <ifVar name="playerDirection" value="1" type="int">
                    <!-- Right -->
                    <changeSprite name="../TempleAtonement/texture/blobsprite_07.png"/>
                </ifVar>
                <ifVar name="playerDirection" value="2" type="int">
                    <!-- Down -->
                    <changeSprite name="../TempleAtonement/texture/blobsprite_01.png"/>
                </ifVar>
                <ifVar name="playerDirection" value="3" type="int">
                    <!-- Left -->
                    <changeSprite name="../TempleAtonement/texture/blobsprite_04.png"/>
                </ifVar>
            </ifVar>
            <ifVar name="blink" type="bool" value="true">
                <changeSprite name="../TempleAtonement/texture/transparent.png"/>
            </ifVar>
        </ifVar>
    </update>
    <variables>
        <bool name="isAttacking" value="false"/>
        <double name="attackTimer" value="0.0"/>
        <int name="playerDirection" value="2"/> <!-- 0 - up, 1 - right, 2 - down, 3 - left -->
        <entity name="weaponEntity" value="weaponEntity"/>
        <int name="health" value="5"/>
        <!-- <entity name="scoreEntity" value="score"/> -->
        <entity name="interactEntity" value=""/> <!-- No entity to start -->
        <double name="invinTimer" value="0.0"/>
        <bool name="isInvincible" value="false"/>
        <bool name="blink" value="false"/>
    </variables>
    <interacted>
        
    </interacted>
    <start>

    </start>
    <onCollision>
        <ifVar name="collisionObject-tag" value="Enemy" type="string">
            <ifVar name="isInvincible" type="bool" value="false">
                <addVar name="health" value="-1" type="int"/>
                <ifVar name="health" value="0" type="int">
                    <log value="Health is at 0!"/>
                    <loadScene name="gameoverScene"/>
                </ifVar>
                <updateVar name="isInvincible" value="true" type="bool"/>
            </ifVar>
        </ifVar>
        <ifVar name="collisionObject-tag" value="Coin" type="string">
            <!-- <onEntity name="scoreEntity">
                <addVar name="score" value="100"/>
            </onEntity> -->
        </ifVar>
        <!-- <ifVar name="collisionObject-tag" value="Interactable" type="string">
            <updateVar name="interactEntity" value="collisionObject-name" type=""/>
        </ifVar> -->
    </onCollision>
</root>

<!-- 
Reserved:
Variable Names:
    collisionObject-tag -> the value of the tag component on the other object
keyPress Input values:
    KEY_W - w
    KEY_S - s
    KEY_A - a
    KEY_D - d
    KEY_SPACE - space
Reserved other value names:
    deltaTime - the deltaTime during the update
    collisionObject-name -> the value of the name component of the other object

New Commands:
onEntity name="nameOfEntityVariable" :
    perform the sub-section of commands in the context of the entity stored in the variable specified
entity name="nameOfVariable" value="nameOfEntityToBeStored" :
    variable type for storing entities, entities are found by name
callMethod name="methodName" :
    runs the code within the node with the name matching the name attribute, custom methods should be siblings to update, start, variables, onCollision, etc.
changeSprite name="texturePathName.png" :
    changes the texture of the texture component of this entity to the one specified
ifVarGreater name="variableName" value="someNumber" :
    same as if (variableName > someNumber) {
keyPress value="keyCode" :
    if statement but checks if a key is being pressed
matchEntityPos name="nameOfEntityVariable"
    set the entity's pos to the current entity's pos
-->